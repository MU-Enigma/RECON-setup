#!/bin/bash

# File to be placed in /usr/local/sbin/
# Custom script to onboard new users onto RECON
# Funtions:
#	- Create new user with home directory and passwordless login
# 	- Generate and add new SSH keys for inter-node access
# 	- Add user SSH keys for authentication.
# Author: Srikar (aka epoch101),Gurram Siddarth Reddy
# Last modified: 4th Aug, 2022

# $1 - username
# $2 - ssh key
# $3 - Name of the user
# $4 - group of the user

MOD_DIR=/usr/local/sbin/useradd_mod
while getopts ":k:i:n:u:" options; do
    case "${options}" in 
        i)
            username=${OPTARG}
            ;;
        k)
            SSH_KEY=${OPTARG}
	    echo $SSH_KEY
            ;;
        g)
            group=${OPTARG}
            ;;
        n)
            name=${OPTARG}
            ;;
        :)
            echo "unknown FLAG error"
            ;;
    esac
done
echo "ooooo $SSH_KEY"
if id "$username" &>/dev/null; then
	echo 'user found'
	echo 'quitting...'
	exit
else
    echo "creating user $username with username $name"
fi

# Check if the username was provided
if ! [ -n "$username" ]; then
	echo "No username provided"
	echo -n "Enter username: "
 	read username
fi
if ! [ -n "$SSH_KEY" ]; then                 # If ssh key is an empty string,
    # Getting SSH keys from user
    echo -n "Enter user's SSH keys:324 "
    read SSH_KEY
fi
if [ "$name" = "" ]; then                 # If ssh key is an empty string,
    # Getting SSH keys from user
    echo -n "Enter full name of the user: "
	read FULL_USERNAME
else
	FULL_USERNAME=$name
fi

student='s[1-9][0-9][meca][semic][0-9][0-9][0-9]' # regex for valid student username
faculty='f[0-9][0-9][0-9][0-9]' # regex for valid faculty ID
if [[ ! $username =~ $student && ! $username =~ $faculty ]]; then
	echo "Invalid username, exiting..."
	exit	# exit if the username is invalid
fi


# Check if the script is running as root
if [ "$USER" != "root" ]; then
	echo "Script not running as root, exiting..."
	exit
fi

# Create new user with home directory
useradd -m $username --comment "$FULL_USERNAME"

# Change home permission to 750 for increased privacy
chmod 750 /home/$username

# Get new UID and GID
rUID=$(id $username -u)
rGID=$(id $username -g)

# Add user to LDAP
$MOD_DIR/ldif_editors/genLDIF.sh $username $rUID $rGID

# Generate and add ssh-keys for new user
gen_newuser_keys.sh -i $username -u $rUID -g $rGID -k "$SSH_KEY"