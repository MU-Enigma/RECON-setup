#!/bin/bash
# File to be placed in /usr/local/sbin/
# Script to:
# 	1. Get all the user groups the user is in
# 	2. Check if the user's groups are in sync with LDAP groups
# 	3. Add or remove users from respective LDAP entries if not in sync
# Author: Srikar (aka epoch101)

# $1 - username

MOD_DIR=/usr/local/sbin/usermod_mod

# Check if the username was provided
if ! [ -n "$1" ]; then
		echo "No username provided, exiting..."
		exit
fi

# Check if the username exists
if ! id "$1" &>/dev/null; then
	echo "User $1 not found, exiting..."
	exit
fi

# Check if the script is running as root
if [ "$USER" != "root" ]; then
		echo "Script not running as root, exiting..."
		exit
fi

# Check if the user exists. Note: Adding a (&) before the pipe (>) breaks the statement. Hence not used.
if ! id "$1" >/dev/null; then
		echo "User $1 not found, exiting..."
		exit
fi

# Getting all the groups the user is a part of
UGID_LIST=$(id -G $1)

# Iterating through the list of groups
for gid in $UGID_LIST
do
		# Skip checking for UID
		if [ $gid -eq $(id "$1" -u) ];then
				continue
		fi

		FOUND=0
		GROUP_QUERY=$(ldapsearch -x -D cn=admin,dc=senpai -b ou=groups,dc=senpai -w $(cat /etc/pam_ldap.conf) gidNumber=$gid memberUid | grep memberUid:)

		if [ -n "$GROUP_QUERY" ];then

				GROUPS=$(echo $GROUP_QUERY | sed -e "s/memberUid://g")
				for member in $GROUPS
				do
						echo $member
						if [ "$member" = "$1" ]; then
								FOUND=1
								break
						fi
				done
		fi

		# If user not in the GROUP_QUERY, modify LDAP to add them
		# if not GROUP_QUERY or not FOUND, do an LDAP modify to add user
		if ! [ -n "$GROUP_QUERY" ] || [ $FOUND -eq 0 ]; then
				gName=$(getent group $gid | sed 's/:.*//')

				# Adding the user to group entry
				$MOD_DIR/add_usergroup_ldap.sh $1 $gid
		fi
done


# Remove entries that are not needed from LDAP

# Getting all the groups the user is a part of in LDAP
LDAP_GRPS_LIST=$(ldapsearch -x -D cn=admin,dc=senpai -b ou=groups,dc=senpai -w $(cat /etc/pam_ldap.conf) memberUid=$1 gidNumber | grep gidNumber:)
LDAP_GRPS_LIST=$(echo $LDAP_GRPS_LIST | sed -e "s/gidNumber://g")

# Iterate through all the results
if [ -n "$LDAP_GRPS_LIST" ];then
	for lgroup in $LDAP_GRPS_LIST
	do
		# Skip checking for UID
		if [ $lgroup -eq $(id "$1" -u) ];then
				continue
		fi

		# If a group is not in the list of groups, then delete from LDAP entry
		if ! [[ $(id "$1" -G) == *"$lgroup"* ]]; then
			# Getting the group name
			gName=$(getent group $lgroup | sed 's/:.*//')
			
			# Removing user entry from a specific group
			echo "dn: cn=$gName,ou=groups,dc=senpai
			changetype: modify
			delete: memberUid
			memberUid: $1" | ldapmodify -x -D cn=admin,dc=senpai -w $(cat /etc/pam_ldap.conf)
		fi
	done
fi

# LDAPmodify query:
# dn: cn=sudo,ou=groups,dc=senpai
# changetype: modify
# add: memberUid
# memberUid: ltest

# LDAPdelete query
# dn: cn=sudo,ou=groups,dc=senpai
# changetype: modify
# delete: memberUid
# memberUid: ltest